name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        configuration: [Debug, Release]
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            arm64: win-arm64
          - os: ubuntu-latest
            arm64: linux-arm64

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Build/Publish app (native)
      run: dotnet publish -c ${{ matrix.configuration }}

    - name: Install prerequisites for Linux ARM64 cross-compile
      run: |
        sudo dpkg --add-architecture arm64
        sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
        EOF'
        sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
        sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
        sudo apt-get update
        sudo apt-get install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64
      if: runner.os == 'Linux'

    - name: Build/Publish app (arm64)
      run: dotnet publish -c ${{ matrix.configuration }} -r ${{ matrix.arm64 }}